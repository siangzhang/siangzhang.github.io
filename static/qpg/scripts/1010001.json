{
"name": "QScript Math Functions",
"content": "// This example demonstrates QScript math functions.\n //\n \n // Use JavaScript Math object functions in expressions.\n Print Math.sin(Math.PI / 2)\n Print Math.exp(1)\n Print Math.log(10)\n Print Math.PI\n \n // Use QMath object functions useful in quantum algorithms.\n \n // Calculates the greatest common divisor.\n Print QMath.gcd(10, 25)\n \n // Returns integer power a^b.\n Print QMath.ipow(2, 10)\n \n // Calculates the number of bits required to store a value.\n Print QMath.getWidth(15)\n \n // Calculates fractional approximation of a decimal value.\n Print QMath.fracApprox(30, 10, 8)\n \n // Calculates the inverse modulus of N and C.\n Print QMath.inverseMod(11, 5)\n \n // Calculates x^k mod N.\n Print QMath.expModN(5, 3, 15)\n \n //////////////////////////////////////////////////////////\n // Implementation details.\n \n // QMath.fracApprox = function(a, b, width) {\n //   var f = a / b;\n //   var g = f;\n //   var i, num2 = 0, den2 = 1, num1 = 1, den1 = 0, num = 0, den = 0;\n \n //   do {\n //     i = Math.round(g + 0.000005);\n \n //     g -= i - 0.000005;\n //     g = 1.0 / g;\n \n //     if (i * den1 + den2 > 1 << width)\n //       break;\n \n //     num = i * num1 + num2;\n //     den = i * den1 + den2;\n \n //     num2 = num1;\n //     den2 = den1;\n //     num1 = num;\n //     den1 = den;\n // \n //   } while (Math.abs((num / den) - f) > 1.0 / (2 * (1 << width)));\n // \n //   return [num, den];\n // };\n \n // QMath.inverseMod = function(n, c) {\n //   var i;\n \n //   for (i = 1; (i * c) % n != 1; i++) {}\n \n //   return i;\n // };"
}